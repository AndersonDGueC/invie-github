1 configuramos git despues de instalarlo: 
1.1en consola agregamos email- git config --global user.email adguerreroc@...
1.2en consola agregamos usuario- git config --global user.name anderson
1.3 colores- git config --global color-ui true
2 iniciar un repositorio
2.1 git init xxx donde la xxx significa el nombre de la carpeta
2.2 carpetas ya existentes, nos dirigimos  a la carpeta y sobre ella solo 
marcamos git init
2.3 agregar archivos a git, por lo general cuando creamos un archivo este se 
encuentra en nuestro working directrory y queremos pasarlos a nuestro stage,
primero realizamos una verificación con el comando 
git status , si no tinen seguimiento
utilizamos el git add xxxx
luego verificamos con git status	
3si luego quiero sacarlo del git stage utilizamos git --cached xxxx
3.1 si tenemos varios archivos que queremos agregarlos al tiempo es git add-A 
3.2 si quiero borrar los archivos del stage y working directory git rm -f xxxx
3.3 confirmar si hay un archivo que existe en el directorio git add -n xxx
4 comando que compromete nuestros cambios y los sube al repositorio es 
git commit -m "xxx"  las x representa el mesaje que hemos hechos sobre el commit
5 si por error agregamos una modificacion en el archivo base y no agregamos 
una imagen u otro tipo de archivo, procedemos ha agregar el archivo que olvida
mos y seguimos con la siguiente opción 
git commit --amend "xxxx" si mi commit anterior se encontraba bien
en el valor de las x dejamos el nombre anterior
entonces tecleamos solo git commit
ver las listas de commit con git log	
6 versionar el proyecto, utilizamos etiquetas tag, con el comando 
git tag -a version -m "nombre deseado" (se realiza sobre el ultimo comm)
git tag -l para ver las versiones del proyecto
git tag version hash del commit. una etiqueta sencilla sobre cualquier comm	
6.1 elimar y cambiar etiquetas
elimiar git tag -d version
renombrar mi tag git tag -f  -a  version -m 'iniciando el proyecto' y el hash
7. personalizacion de git log
git log --oneline el hash lo va ha resumir
tambien podemos colocar multiples parametros git log --oneline --graph
como avanza la historia de mi proyecto. (versiones alternas)
log de los commits que quieras ver git log -# #numero de commits
8. diferencias entre commits git diff hash mi estado actual con el commit 
del hash compara
8.1 entre dos commits tenemos git diff hash1 hash2
hay que tener encuenta el orden de los paramentros ya que pueden aparecer 
como agregado o eliminado lineas de codigo
9. reset para manipular versiones en el tiempo. por si hubo un error en la
modificación o reescribir git reset --soft --mixed --hard
git reset --mixed descarta cambios y quita archivos de stage
